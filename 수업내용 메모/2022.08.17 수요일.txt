08월 17일 수요일 - 데이터베이스 구현

데이터베이스 오브젝트 생성하기
==================================
책 183p~

*자동화 프로그램
DDL : 데이터베이스 정의어 (되돌리기가 불가능)
 - CREATE, DROP, ALTER

*단순한 포트폴리오
DML: 데이터베이스 조작어 (되돌리기 가능)
 - SELECT, INSERT, UPDATE, DELETE

*데이터베이스(폴더) -> 테이블(파일) -> 한줄내용(row), 한칸(column)
  use db이름(선택)     show 테이블명        SELECT         SELECT

SELECT 컬럼 또는 * FROM 테이블명 WHERE 조건~


*새로운 테이블 생성하기
아이디(userid 글자), 비밀번호(passwd 숫자) int(숫자수)
- 정해진 글자수 CHAR(글자수), 글자수가 정확하지 않으면 VARCHAR(글자수)
- null 값이면 안될경우에는 not null

CREATE TABLE login(
userid varchar(20) not null,
passwd int(8) not null
);

만들고 나서 show tables; 로 테이블이 제대로 만들어졌는지 확인
desc login; 테이블 구조확인

*자료입력
INSERT INTO 테이블명 VALUES(값);

INSERT INTO login VALUES('hyeonyoung',12345);
INSERT INTO login VALUES('busan',9999);
INSERT INTO login VALUES('seoul',00000);

SELECT * FROM 테이블명 WHERE 컬럼 = '값';
SELECT * FROM login WHERE userid = 'seoul';
SELECT COUNT(*) FROM login WHERE userid = 'it';

SELECT COUNT(*) FROM login 
WHERE userid = 'busan' AND passwd='9999';

login 되었는지 확인할 때는 보톤 아이디 비밀번호 두개 체크

DROP TABLE 테이블이름;

SELECT bcName as 제조사 FROM big_category;
as를 사용하면 별명을 쓸 수 있다

SELECT COUNT(bcName) as 제조사개수 FROM big_category;
개수를 알 수 있다

SELECT B.bcName FROM big_category as B;
별명을 B로 줄여서 줄 수 도 있다

서버를 처음 설치
DROP TABLE IF EXISTS big_category;
CREATE TABLE big_category(
bcCode varchar(5) not null,
bcName varchar(20) not null
);
INSERT INTO big_category VALUES('100','BENZ');
INSERT INTO big_category VALUES('200','BMW');
INSERT INTO big_category VALUES('300','AUDI');

primary key : 나를 구별해주는 유일한 key
 - not null, 중복되는 값이 아님
foreign key : 다른 테이블과 연결해서 사용할 때 쓰는 키
 - 연결할 테이블의 primary ley를 일반적으로 사용하면 됨
 - 당연히 연결해서 사용할 테이블과 구조가 동일해야 함

 - join 테이블 여러개를 연결해서 사용할 때

회원테이블 : userTBL
- userid 글자 not null 가변형 글자, 기본키로 사용해야한다 primary key
- mobile1 통신사 3 char(3) 고정형 글자
- height 키 : smallint 숫자 /*2byte*/
- mDate date 날짜

상품테이블 : buyTBL 
- num 상품에서 상품을 유일하게 구분해주는 primary key
- 원래는 없어도 되지만 userTBL과 연결해서 사용하기 위해서는
   필요한 foreign key 외래키
  숫자타입이고 자동으로 코드를 부여
- 상품이름
- 가격 숫자

CREATE TABLE userTBL(
userid varchar(20) not null primary key,
mobile1 char(3),
height smallint,
mDate date
);

CREATE TABLE buyTBL(
num int(8) not null primary key auto_increment,
userid varchar(20) not null,
productName varchar(255) not null,
productPrice int not null default 0,
foreign key(userid) references userTBL(userid)
                     /*연결할 테이블의 pk는 누구인가*/
);

INSERT INTO 테이블이름 VALUES();

INSERT INTO userTBL VALUES(
'busanit','011',190, now()
);
INSERT INTO userTBL VALUES(
'seoulit','010',184, now()
);
INSERT INTO userTBL VALUES(
'hyeonyoung','017',170, now()
);
SELECT * FROM userTBL;
==============================

INSERT INTO buyTBL VALUES(
NULL, 'busanit', '옥션', 10000
);
INSERT INTO buyTBL VALUES(
NULL, 'seoulit', '지마켓', 50000
);
INSERT INTO buyTBL VALUES(
NULL, 'hyeonyoung', '쿠팡', 80000
);
SELECT * FROM buyTBL;
==============================

SELECT U.userid, B.productName, B.productPrice FROM
 userTBL as U, buyTBL as B WHERE U.userid= 'seoulit';
===================================
오후

컬럼 IN(값1,값2...) = OR

AND
컬럼 BETWEEN 값1 AND 값2

birthYear >= 1970    AND  height >= 182
태어난 해가 1970이상 이고 키가 182이상인 사람의 아이디와 이름을 출력
-> SELECT userid, name FROM userTBL WHERE birthYear >= 1970 AND height >= 182;

이고, 이면서 - AND
이거나, 또는 - OR

키가 170이상 180이하인 사람의 아이디와 이름을 출력
SELECT userid,name FROM userTBL WHERE height BETWEEN 170 AND 180;

키가 170이상이거나 180이하인 사람의 아이디와 이름, 키를 출력
SELECT userid,name,height FROM userTBL WHERE height >=170 OR height <=180;
SELECT userid,name,height FROM userTBL WHERE IN(170,180);


성이 김씨인 사람의 이름과 키를 검색하시오 : name like '김%'
SELECT name, height FROM userTBL WHERE name like '김%';

앞이나 뒤에 어떤 글자가 오던지 변수값을 포함하는 이름과 키를 검색하시오.
SELECT name, height FROM userTBL WHERE name like '%search%';

OR
지역이 경남, 전남, 경북인 사람의 이름과 주소를 출력하시오
-> SELECT name, addr FROM userTBL 
WHERE addr = '경남' OR addr = '전남' OR addr = '경북' ;

SELECT name, addr FROM userTBL WHERE addr IN('경남','전남','경북');

검색할때
%는 글자수 제약이 없다
ex  -  김% , %김, %김%

서브쿼리는 키가 180 이상인 사람검색
WHERE height >= 180
WHERE height >= (SELECT height FROM userTBL WHERE name='김경호');

김경호 키보다 초과한 사람의 이름과 키를 출력하시오.
SELECT name, height FROM userTBL WHERE height>
(SELECT height FROM userTBL WHERE name = '김경호');
SELECT height FROM userTBL WHERE name = '김경호';


GitHub 토큰
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


ORDER BY
오름차순 : ASC  12345 abcde
내림차순 : desc  54321 edcba

DISTINCT 중복 데이터 제거
ex) addr 서울서울서울
distinct addr OR distinct(addr)

SELECT COUNT(*) FROM userTBL WHERE addr = '서울';
SELECT DISTINCT(addr) FROM userTBL ORDER BY addr ASC limit 3;

limit : 보여줄 개수 지정
ex) limit 10 = 10개만 보여주기
     limit 0, 10 = 0번부터 10개
     limit 10, 10 = 10번부터 10개

userTBL에서 중복되는 데이터를 하나만 표시하고 addr을 기준으로
내림차순 정렬하고 한 페이지에 2개만 표시하시오
SELECT DISTINCT(addr) FROM userTBL ORDER BY addr limit 2;

SELECT * FROM userTBL ORDER BY addr DESC limit 2;

buyTBL 기본키를 기준으로 내림차순으로 정렬하고 한페이지에 10개만 표시하시오
SELECT * FROM buyTBL ORDER BY num DESC limit 10;


